{"version":3,"file":"dynamic_tree.js","mappings":"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","sources":["webpack://js/./js/fetch_data.js","webpack://js/./js/fetch_api_client.js","webpack://js/./js/fetch_error_handling.js","webpack://js/./js/memberspace_info.js","webpack://js/./js/tree.js","webpack://js/./js/set_tree.js","webpack://js/./js/select_tree.js","webpack://js/./js/list_of_people.js"],"sourcesContent":["import { ApiClient } from './fetch_api_client';\nimport { FetchErrorHandler } from './fetch_error_handling';\n\n\n//const urlBase = 'https://api.colombochetty.com/'\nconst urlBase = 'http://localhost:5000/'\nconst loginUrl = urlBase + 'api/authenticate';\nconst logoutUrl = urlBase + 'auth/logout';\nconst refreshUrl = urlBase + 'auth/refresh_token';\nconst graphQLUrl = urlBase + 'graphql';\nconst restUrlBase = urlBase + 'api/tree/';\n\nconst MEMBERSPACE_TOKEN = \"MemberSpaceWidget.token\"\nconst ACCOUNT_PAGE = \"/account\"\n\nconst apiClient = new ApiClient();\nconst errorHandler = new FetchErrorHandler(loginUrl, refreshUrl, logoutUrl, MEMBERSPACE_TOKEN, ACCOUNT_PAGE, apiClient);\n\nexport async function getRestDataWrapper(url_end) {\n    var restUrl = restUrlBase + url_end;\n\n    try {\n        return await apiClient.getRestData(restUrl);\n    } catch (error) {\n        //console.log(\"Error in REST\");\n        //console.log(restUrl);\n        return await errorHandler.handleRestError(error, restUrl);\n    }\n}\n\nexport async function getGraphQLDataWrapper(query) {\n    try {\n        return await apiClient.getGraphQLData(graphQLUrl, query);\n    } catch (error) {\n        //console.log(\"Error in GraphQL\");\n        //console.log(graphQLUrl);\n        return await errorHandler.handleGraphQLError(error, graphQLUrl, query);\n    }\n}\n\nexport { apiClient, logoutUrl }","export class ApiClient {\n    async login(loginUrl, credential_data) {\n        const loginResponse = await fetch(loginUrl, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(credential_data), \n            credentials: 'include'\n        });\n\n        if (!loginResponse.ok) {\n            throw loginResponse;\n        }\n    }\n\n    async logout(logoutUrl) {\n        const logoutResponse = await fetch(logoutUrl, {\n            method: 'POST',\n            credentials: 'include'\n        });\n\n        if (!logoutResponse.ok) {\n            throw logoutResponse;\n        }\n    }\n\n    async refreshToken(refreshUrl) {\n        const csrfToken = this.getCookie('csrf_refresh_token');\n\n        const refreshResponse = await fetch(refreshUrl, {\n            method: 'POST',\n            credentials: 'include',\n            headers: {\n                'X-CSRF-TOKEN-REFRESH': csrfToken\n            }\n        });\n\n        if (!refreshResponse.ok) {\n            throw refreshResponse;\n        }\n    }\n\n    async getRestData(restUrl) {\n        const response = await fetch(restUrl, {\n            method: 'GET',\n            credentials: 'include'\n        });\n\n        if (!response.ok) {\n            throw response;\n        }\n\n        const data = await response.text();\n        return data;\n    }\n\n    async getGraphQLData(graphqlUrl, query) {\n        const csrfToken = this.getCookie('csrf_access_token'); \n\n        const response = await fetch(graphqlUrl, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'X-CSRF-TOKEN-ACCESS': csrfToken\n            },\n            body: JSON.stringify({ query }),\n            credentials: 'include' \n        });\n\n        if (!response.ok) {\n            throw response;\n        }\n\n        const data = await response.json();\n        return data\n    }\n    \n    // Helper function to get a cookie by name\n     getCookie(name) {\n        let cookieValue = null;\n        if (document.cookie && document.cookie !== '') {\n            const cookies = document.cookie.split(';');\n            for (let i = 0; i < cookies.length; i++) {\n                const cookie = cookies[i].trim();\n                if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                    cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                    break;\n                }\n            }\n        }\n        return cookieValue;\n    }\n}","import { getMemberSpaceCredentials } from './memberspace_info';\n\nconst JWT_MISSING = \"Missing cookie \\\"access_token_cookie\\\"\";\nconst JWT_EXPIRED = \"Token has expired\";\nconst JWT_SIG_FAILURE = \"Signature verification failed\";\n\nexport class FetchErrorHandler {\n    constructor(loginUrl, refreshUrl, logoutUrl, tokenName, redirectPage, apiClient) {\n        this.loginUrl = loginUrl;\n        this.logoutUrl = logoutUrl;\n        this.refreshUrl = refreshUrl;\n        this.memberspace_tokenName = tokenName;\n        this.redirectPage = redirectPage;\n        this.apiClient = apiClient;\n    }\n\n    async handleGraphQLError(error, graphQLUrl, query) {\n        try {\n            if (this.isUnauthorizedError(error)) {\n                //console.log(\"handleGraphQLError\");\n                await this.handleUnauthorizedError(error);\n                return await this.apiClient.getGraphQLData(graphQLUrl, query);\n            } else {\n                if (this.isSigFailure(error)) {\n                    console.log(\"Signature failure error\");\n                }\n                await this.handleLogout();\n                throw error;\n            }\n        } catch(error) {\n            //console.log(error);\n            throw error;\n        }\n    }\n\n    async handleRestError(error, restUrl) {\n        try {\n            if (this.isUnauthorizedError(error)) {\n                //console.log(\"handleRestError\");\n                await this.handleUnauthorizedError(error);\n                return await this.apiClient.getRestData(restUrl);\n            } else {\n                if (this.isSigFailure(error)) {\n                    console.log(\"Signature failure error\");\n                }\n                await this.handleLogout();\n                throw error;\n            }\n        } catch(error) {\n            //console.log(error);\n            throw error;\n        }\n    }\n\n    async handleUnauthorizedError(error) {\n        const errorBody = await error.json();\n        if (errorBody.msg === JWT_EXPIRED) {\n            await this.handleRefresh();\n        } else if (errorBody.msg === JWT_MISSING) {\n            const credentialData = await getMemberSpaceCredentials();\n            await this.apiClient.login(this.loginUrl, credentialData);\n        } else {\n            throw error;\n        }\n    }\n\n    async handleRefresh() {\n        try {\n            await this.apiClient.refreshToken(this.refreshUrl);\n        } catch(error) {\n            this.handleLogout();\n            throw error;\n        }\n    }\n\n    async handleLogout() {\n        localStorage.removeItem(this.memberspace_tokenName);\n        await this.apiClient.logout(this.logoutUrl);\n        window.location.href = this.redirectPage;\n    }\n\n    isUnauthorizedError(error) {\n        return error instanceof Response && error.status === 401;\n    }\n\n    isSigFailure(error) {\n        return error instanceof Response && error.status === 422;\n    }\n}","var DEFAULT_EMAIL = 'ben.anandappa@gmail.com'\nvar DEFAULT_ID ='5130204'\n\n// Function to wait until MemberSpace is defined\nfunction waitForMemberSpace() {\n    return new Promise((resolve, reject) => {\n        const maxWaitTime = 10000; // Maximum wait time in milliseconds\n        const intervalTime = 100;  // Interval time to check in milliseconds\n        let elapsedTime = 0;\n\n        const interval = setInterval(() => {\n            if (typeof MemberSpace !== 'undefined') {\n                clearInterval(interval);\n                resolve();\n            } else {\n                elapsedTime += intervalTime;\n                if (elapsedTime >= maxWaitTime) {\n                    clearInterval(interval);\n                    reject('MemberSpace did not become available within the maximum wait time.');\n                }\n            }\n        }, intervalTime);\n    });\n}\n\n// Function to get MemberSpace information\nvar getMsReadyPromise = () => new Promise((resolve, reject) => {\n    // Check if MemberSpace is ready\n    if (MemberSpace.ready) {\n        try {\n            resolve(window.MemberSpace.getMemberInfo());\n        } catch (error) {\n            reject('Error fetching MemberSpace member info: ' + error);\n        }\n    } else {\n        const handleReady = ({ detail }) => {\n            try {\n                resolve(detail);\n            } catch (error) {\n                reject('Error in MemberSpace.ready event: ' + error);\n            }\n            document.removeEventListener('MemberSpace.ready', handleReady);\n        };\n\n        document.addEventListener('MemberSpace.ready', handleReady);\n    }\n});\n\nexport async function getMemberSpaceCredentials() {\n    //console.log(\"getMemberSpaceCredentials\");\n    var isLoggedIn = false;\n    var credential_data = {\n        email: DEFAULT_EMAIL,\n        user_id: DEFAULT_ID\n    };\n\n    try {\n        // Wait for MemberSpace to become available\n        await waitForMemberSpace();\n        //console.log(\"MemberSpace is ready\");\n\n        const data = await getMsReadyPromise();\n\n        //console.log(\"MemberSpace data is ready\");\n\n        isLoggedIn = data && data.isLoggedIn;\n        if (isLoggedIn) {\n            credential_data.email = data.memberInfo.email;\n            credential_data.user_id = data.memberInfo.id;\n        }\n    } catch(error) {\n        console.log(`Error with MemberSpace: ${error}`);\n    }\n\n    //console.log(\"Return creds\");\n    return credential_data;\n}","\nfunction adjustHeight(parent_li, parent_ul, recursive) {\n  // Get all li elements within the ul\n  const allLiElements = parent_ul.querySelectorAll(':scope > li');\n\n  // Get the last li element\n  const lastLi = allLiElements[allLiElements.length - 1];\n  const liHeight_half = lastLi.getBoundingClientRect().height/2;\n  const liDim = lastLi.getBoundingClientRect();\n  const parent_li_dim = parent_li.getBoundingClientRect();\n  const correct_hi = liDim.bottom - parent_li_dim.bottom - liHeight_half;\n  parent_ul.style.setProperty('--ul-before-margin', `${correct_hi}px`);\n\n  const parent_of_parent_ul = parent_ul.parentElement;\n  if (recursive & parent_of_parent_ul & parent_of_parent_ul.tagName === 'UL') {\n    adjustHeight(parent_of_parent_ul.previousElementSibling, parent_of_parent_ul, true)\n  }\n}\n\nfunction recruseiveDeactivate(element) {\n  var childUls = element.getElementsByClassName(\"nested\");\n  for (var i = 0; i < childUls.length; i++) {\n    childUls[i].classList.remove(\"active\");\n    recruseiveDeactivate(childUls[i])\n  }\n  var childButtons = element.getElementsByClassName(\"collapsible\");\n  for (var i = 0; i < childButtons.length; i++) {\n    childButtons[i].classList.remove(\"active\");\n  }\n}\n\nfunction changeActiveClass(element) {\n  // this will toggle active for all descendents \n  element.classList.toggle(\"active\");\n\n  const parent_li = element.parentElement.parentElement.parentElement;\n  const parent_ul = parent_li.nextElementSibling;\n  parent_ul.classList.toggle(\"active\");\n\n  adjustHeight(parent_li, parent_ul, true);\n\n  if (element.classList.contains(\"active\")) {\n      element.textContent = \"\";\n  } else {\n    element.textContent = \"\";\n    recruseiveDeactivate(parent_ul)\n  }\n}\n\n// the below is used to expand or collapse all descendents \nvar isExpanded = false;\nfunction activateAll() {\n  var root = document.getElementsByClassName(\"root\")[0];\n  var level_0 = document.getElementsByClassName(\"level-0\")[0];\n\n  // Get all nested lists in the document\n  var nestedLists = document.getElementsByClassName(\"nested\");\n\n\n  // Loop through each nested list\n  for (var i = 0; i < nestedLists.length; i++) {\n    var nestedList = nestedLists[i];\n\n    // Add the \"active\" class to the nested list\n    if (!isExpanded) {\n      nestedList.classList.add(\"active\");\n    } else {\n      if (!nestedList.classList.contains(\"level-0\")) {\n        nestedList.classList.remove(\"active\");\n      }\n    }\n  }\n\n  // Loop through each nested list\n  if (!isExpanded) {\n    for (var i = 0; i < nestedLists.length; i++) {\n      var nestedList = nestedLists[i];\n      adjustHeight(nestedList.previousElementSibling, nestedList, false)\n    }\n  } else {\n    adjustHeight(level_0.previousElementSibling, level_0, false)\n  }\n\n  var collapseButtons = document.getElementsByClassName(\"collapsible\");\n\n  for (var i = 0; i < collapseButtons.length; i++) {\n    var collapseButton = collapseButtons[i];\n\n    // Add the \"active\" class to the nested list\n    if (!isExpanded) {\n      collapseButton.classList.add(\"active\");\n    } else {\n      collapseButton.classList.remove(\"active\");\n    }\n  }\n\n\n  isExpanded = !isExpanded\n}\n\n\nfunction runTreeCode() {\n  // adjusgt height on load \n  isExpanded = false;  \n  var root = document.getElementsByClassName(\"root\")[0];\n  var level_0 = document.getElementsByClassName(\"level-0\")[0];\n  if (level_0) {\n    adjustHeight(level_0.previousElementSibling, level_0, false)\n  }\n\n  var collapseButtons = document.getElementsByClassName(\"collapsible\");\n  var i;\n  for (i = 0; i < collapseButtons.length; i++) {\n  \tcollapseButtons[i].addEventListener(\"click\", function() {\n  \t\tchangeActiveClass(this);\n  \t});\n  }\n\n  // Code to get sticky bar to show or hide \n  // it will show once the person scrolls more than half the page\n  var stickyBar = document.querySelector('.sticky-bar');\n  var threshold = window.innerHeight * 0.5; // set the threshold to 50% of the viewport height\n\n  function onScroll() {\n    if (window.pageYOffset > threshold) {\n      stickyBar.classList.remove('bar-hidden');\n    } else {\n      stickyBar.classList.add('bar-hidden');\n    }\n  }\n\n  window.addEventListener('scroll', onScroll);\n\n  function debounce(func, wait) {\n    let timeout;\n    return function () {\n      const context = this;\n      const args = arguments;\n      const later = function () {\n        timeout = null;\n        func.apply(context, args);\n      };\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n    };\n  }\n\n  function onWindowResize() {\n    console.log('Window resized:', window.innerWidth, window.innerHeight);\n    // Get all nested lists in the document\n    var nestedLists = document.querySelectorAll('.nested.active'); \n    // Loop through each nested list\n    for (var i = 0; i < nestedLists.length; i++) {\n      var nestedList = nestedLists[i];\n  \tadjustHeight(nestedList.previousElementSibling, nestedList, false)\n    }\n  }\n\n  const debouncedResizeHandler = debounce(onWindowResize, 10);\n  window.addEventListener('resize', debouncedResizeHandler);\n\n  /* move this to inline \n  window.onload = function() {\n    console.log(\"hello\");\n    var root = document.getElementsByClassName(\"root\")[0];\n    var level_0 = document.getElementsByClassName(\"level-0\")[0];\n    adjustHeight(root, level_0, false)\n  };\n  */ \n}\n\nexport { runTreeCode, activateAll };\n\n","import { getRestDataWrapper } from './fetch_data';\nimport { runTreeCode } from './tree';\n\nasync function setTreeData(url_end) {\n    try {\n        const treeData = await getRestDataWrapper(url_end);\n\n        // Find the container element\n        const container = document.getElementById('tree-content');\n        \n        // Append the fetched data to the container\n        container.innerHTML = treeData; \n\n        runTreeCode();\n        console.log(\"finsh run tree code\")\n        document.querySelectorAll('.tree-link').forEach(function(element) {\n            element.addEventListener('click', function() {\n                setTreeData(this.dataset.treeId);\n            });\n        });\n    } catch (error) {\n        console.error('Error:', error);\n        throw error;\n    }\n}\n\nexport { setTreeData };\n","import { getPeopleList } from './list_of_people';\nimport { setTreeData } from './set_tree';\nimport { activateAll } from './tree';\n\n\ndocument.addEventListener('DOMContentLoaded', async function() {\n    await initDynamicTree();\n});\n\ndocument.addEventListener('MemberSpace.member.info', initDynamicTree);\n\nasync function initDynamicTree() {\n    const searchInput = document.getElementById('search-input');\n    const dropdown = document.getElementById('dropdown');\n    const selectedIdInput = document.getElementById('selected-id');\n    document.getElementById('activate_all').addEventListener('click', function() {\n          activateAll();\n      });\n    console.log(\"Hi\")\n\n    try {\n        // init view\n        await setTreeData(\"I0001\");\n        const people = await loadAndSortPeople();\n        searchInput.addEventListener('input', () => handleInput(searchInput, dropdown, selectedIdInput, people));\n        searchInput.addEventListener('blur', () => handleBlur(dropdown));\n    } catch(error) {\n        //console.log(\"initDynamicTree failed\")\n        //console.log(error)\n        //throw error\n    } \n}\n\nasync function loadAndSortPeople() {\n    const people_res = await getPeopleList();\n    const people = people_res.data.individuals;\n\n    return people.sort((a, b) => sortPeopleByName(a, b));\n}\n\nfunction sortPeopleByName(a, b) {\n    const aGivn = a.GIVN ? a.GIVN.toLowerCase() : '';\n    const bGivn = b.GIVN ? b.GIVN.toLowerCase() : '';\n    const aSurn = a.SURN ? a.SURN.toLowerCase() : '';\n    const bSurn = b.SURN ? b.SURN.toLowerCase() : '';\n\n    if (aGivn === bGivn) {\n        return aSurn.localeCompare(bSurn);\n    }\n    return aGivn.localeCompare(bGivn);\n}\n\nfunction handleInput(searchInput, dropdown, selectedIdInput, people) {\n    const inputValue = searchInput.value.toLowerCase();\n    dropdown.innerHTML = '';\n\n    const filteredPeople = people.filter(person => \n        `${person.GIVN} ${person.SURN}`.toLowerCase().includes(inputValue)\n    );\n\n    updateDropdown(searchInput, dropdown, selectedIdInput, filteredPeople, inputValue);\n}\n\nfunction updateDropdown(searchInput, dropdown, selectedIdInput, filteredPeople, inputValue) {\n    if (filteredPeople.length === 1 && \n        `${filteredPeople[0].GIVN} ${filteredPeople[0].SURN}`.toLowerCase() === inputValue &&\n         selectedIdInput.value != filteredPeople[0].id) \n    {\n        // Auto-select if only one match and it's exactly as typed\n        selectedIdInput.value = filteredPeople[0].id;\n        searchInput.value = `${filteredPeople[0].GIVN} ${filteredPeople[0].SURN} (${filteredPeople[0].id})`;\n        dropdown.style.display = 'none';\n        setTreeData(filteredPeople[0].id);\n    } else if (inputValue.length > 1) {\n        populateDropdown(dropdown, searchInput, selectedIdInput, filteredPeople);\n    } else {\n        dropdown.style.display = 'none';\n    }\n}\n\nfunction populateDropdown(dropdown, searchInput, selectedIdInput, people) {\n    people.forEach(person => {\n        let div = document.createElement('div');\n        div.textContent = `${person.GIVN} ${person.SURN} (${person.id})`;\n        div.onclick = () => selectPerson(person, searchInput, selectedIdInput, dropdown);\n        dropdown.appendChild(div);\n    });\n\n    dropdown.style.display = 'block';\n}\n\nfunction selectPerson(person, searchInput, selectedIdInput, dropdown) {\n    searchInput.value = `${person.GIVN} ${person.SURN} (${person.id})`;\n    selectedIdInput.value = person.id; // Store the selected ID\n    dropdown.innerHTML = '';\n    dropdown.style.display = 'none';\n    setTreeData(person.id);\n}\n\nfunction handleBlur(dropdown) {\n    // Delay hiding the dropdown to allow click event processing\n    setTimeout(() => {\n        if (!dropdown.contains(document.activeElement)) {\n            dropdown.style.display = 'none';\n        }\n    }, 200);\n}","import { getGraphQLDataWrapper } from './fetch_data';\n\nexport async function getPeopleList() {\n    const query = `\n      {\n      individuals {\n        id\n        GIVN\n        SURN\n      }\n    }\n    `;\n\n    try {\n        const peopleData = await getGraphQLDataWrapper(query);\n        return peopleData;\n    } catch (error) {\n        // console.error('Error:', error);\n        throw error;\n    }\n}"],"names":["urlBase","loginUrl","logoutUrl","refreshUrl","graphQLUrl","restUrlBase","apiClient","login","credential_data","loginResponse","fetch","method","headers","body","JSON","stringify","credentials","ok","logout","logoutResponse","refreshToken","csrfToken","this","getCookie","refreshResponse","getRestData","restUrl","response","text","getGraphQLData","graphqlUrl","query","json","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","errorHandler","constructor","tokenName","redirectPage","memberspace_tokenName","handleGraphQLError","error","isUnauthorizedError","handleUnauthorizedError","isSigFailure","console","log","handleLogout","handleRestError","errorBody","msg","handleRefresh","credentialData","async","email","user_id","Promise","resolve","reject","elapsedTime","interval","setInterval","MemberSpace","clearInterval","data","ready","window","getMemberInfo","handleReady","detail","removeEventListener","addEventListener","isLoggedIn","memberInfo","id","getMemberSpaceCredentials","localStorage","removeItem","location","href","Response","status","adjustHeight","parent_li","parent_ul","recursive","allLiElements","querySelectorAll","lastLi","liHeight_half","getBoundingClientRect","height","liDim","parent_li_dim","correct_hi","bottom","style","setProperty","parent_of_parent_ul","parentElement","tagName","previousElementSibling","recruseiveDeactivate","element","childUls","getElementsByClassName","classList","remove","childButtons","changeActiveClass","toggle","nextElementSibling","contains","textContent","isExpanded","setTreeData","url_end","treeData","getRestDataWrapper","getElementById","innerHTML","level_0","collapseButtons","stickyBar","querySelector","threshold","innerHeight","pageYOffset","add","debouncedResizeHandler","func","wait","timeout","context","args","arguments","clearTimeout","setTimeout","apply","debounce","innerWidth","nestedLists","nestedList","runTreeCode","forEach","dataset","treeId","initDynamicTree","searchInput","dropdown","selectedIdInput","collapseButton","activateAll","people","getGraphQLDataWrapper","getPeopleList","individuals","sort","a","b","aGivn","GIVN","toLowerCase","bGivn","aSurn","SURN","bSurn","localeCompare","sortPeopleByName","loadAndSortPeople","inputValue","value","filteredPeople","display","person","div","createElement","onclick","selectPerson","appendChild","populateDropdown","updateDropdown","filter","includes","handleInput","activeElement","handleBlur"],"sourceRoot":""}